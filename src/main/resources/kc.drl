import kc.DataInstitution

import uk.ac.imperial.einst.Institution
import uk.ac.imperial.einst.access.RoleOf
import uk.ac.imperial.einst.ipower.Obl
import uk.ac.imperial.einst.micropay.Account
import uk.ac.imperial.einst.micropay.Transfer
import uk.ac.imperial.einst.resource.facility.Facility

global org.apache.log4j.Logger logger

declare Bankrupt
	inst : Institution
end

rule "Institution Bankruptcy"
	salience -100
	when
		$acc : Account(balance < minValue, $i : holder, holder instanceof Institution)
	then
		logger.info($acc +" is bankrupt!");
		insert( new Bankrupt((Institution) $i));
end

rule "Revoke roles on bankruptcy"
	when
		Bankrupt($i : inst)
		$r : RoleOf(inst == $i)
	then
		retract($r);
end

rule "Disable facilities"
	when
		Bankrupt($i : inst)
		$f : Facility(inst == $i, active == true)
	then
		modify($f) {
			setActive(false);
		}
end

rule "Pay institution Costs"
	salience -10
	when
		$i : DataInstitution($r : payRole)
		$acc : Account(holder == $i, balance < 0, $bal : balance)
		accumulate( 
			RoleOf(inst == $i, role == $r, $a : actor); 
			$payers : collectSet($a);
			$payers.size() > 0)
	then
		logger.info($acc);
		double balanceDue = -1 * $bal / $payers.size();
		for(Object o : $payers) {
			Actor a = (Actor) o;
			insert( new Obl(a, new Transfer(a, $i, $i, balanceDue) ));
		}
end
